#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100 // #includeのあとのあたりにスクロール量を変更
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 10>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <0 1>;
        };

        close_window {
            bindings = <&kp LA(F4)>;
            key-positions = <4 2>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        DoubleClick: DoubleClick {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&mkp LCLK &mkp LCLK>;

            label = "DOUBLECLICK";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        tapdance_mainasu_purasu: tapdance_mainasu_purasu {
            compatible = "zmk,behavior-tap-dance";
            label = "NEW_BEHAVIOR(-,+)";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp PLUS>;
        };

        tapdance_kakeru_waru: tapdance_kakeru_waru {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP DANCE *,/";
            #binding-cells = <0>;
            bindings = <&kp ASTERISK>, <&kp SLASH>;
        };

        tapdance_buraketto: tapdance_buraketto {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDNC_[]";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        tapdance_tyuukakko: tapdance_tyuukakko {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDNC_{}";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;
        };

        tapdance_nakaten_hatena: tapdance_nakaten_hatena {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDNC_・,?";
            #binding-cells = <0>;
            bindings = <&kp LS(QUESTION)>, <&kp QUESTION>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE        &kp W         &kp E         &kp R                        &kp T                                            &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F                        &kp G        &kp LS(LG(S))      &kp DELETE       &kp H        &kp J  &kp K      &lt 5 L  &kp DOT
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                        &kp B        &mo 6              &lt 3 F2         &kp N        &kp M  &kp COMMA  &kp DOT  &mt LEFT_SHIFT COMMA
&kp LCTRL         &kp LEFT_ALT  &kp LEFT_GUI  &lt_to_layer_0 6 LANGUAGE_5  &lt 3 SPACE  &lt 7 INT2         &lt 2 BACKSPACE  &lt 1 ENTER                             &kp LEFT_CONTROL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUMBER {
            bindings = <
&kp Q   &trans  &trans  &trans  &trans                      &kp EQUAL                 &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp BACKSPACE
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &tapdance_mainasu_purasu  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_0
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &tapdance_mainasu_purasu  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                                       &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        ARROW {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans          &kp UP_ARROW    &kp HOME         &kp END
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_UP
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans          &trans          &trans           &kp PAGE_DOWN
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SIMBOL {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH  &kp DOLLAR  &kp LS(PERCENT)                      &kp SQT               &kp AMPERSAND          &kp TILDE            &kp LC(INT_YEN)  &kp PIPE
&trans           &trans             &trans    &trans      &trans           &trans      &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LS(SEMICOLON)    &kp COLON        &kp AT_SIGN
&trans           &trans             &trans    &trans      &trans           &trans      &trans  &kp LESS_THAN         &kp GREATER_THAN       &tapdance_buraketto  &kp UNDERSCORE   &tapdance_buraketto
&trans           &trans             &trans    &trans      &trans           &trans      &trans  &trans                                                                             &tapdance_buraketto
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans     &trans     &trans     &kp C_SLOW2
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                   &kp C_SLOW_TRACKING
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &mkp MB4  &mkp MB5  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        DEVICE {
            bindings = <
&trans  &trans        &trans        &trans        &trans                                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &bootloader      &bootloader  &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &bootloader      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans           &trans       &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MACRO {
            bindings = <
&trans  &trans  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)                      &trans  &kp LC(LS(TAB))  &kp LG(UP)    &kp LC(TAB)    &kp LA(UP)
&trans  &trans  &kp LG(N4)  &kp LG(N5)  &kp LG(N6)  &trans      &trans  &trans  &kp LG(LEFT)     &kp LG(DOWN)  &kp LG(RIGHT)  &trans
&trans  &trans  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &trans      &trans  &trans  &trans           &trans        &trans         &trans
&trans  &trans  &trans      &trans      &trans      &trans      &trans  &trans                                                &trans
            >;
        };
    };
};
